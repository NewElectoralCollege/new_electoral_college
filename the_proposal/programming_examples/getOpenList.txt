/*
list.txt:
Bob,5857
Steve,3203
Alex,2541
Theo,1572
Michelle,9712
Peter,1410
Alan,219
David,306
Rich,721
Jack,687

If a candidate gets 10% of the party's votes, they are elected. 
This Party won 4 seats.
Michelle got a very high number of preference votes: 37% of the party's total.
Bob (22.33%) and Steve (12.21%) also clear the threshold, but they are first on the list, 
 so they would be elected anyway.
Alex is also elected, because the party needs a fourth seat and he is placed next on the list.

So the candidates from this party are:
Michelle
Bob
Steve
Alex
*/

#include <iostream>
#include <algorithm>
#include <vector>
#include <fstream>
#include <string>

using namespace std;

bool PartySorter(const pair<string,float> &a, const pair<string,float> &b) {
    if (
        (a.second >= 0.1 &&
        b.second >= 0.1 &&
        a.second > b.second) ||
        (a.second >= 0.1 &&
        b.second < 0.1
        )
    ) return true;
    return false;
}

static int total_votes;

void getList(int seats) {
    string text;
    ifstream PartyList("list.txt");

    vector<pair<string,float>> candidates;

    while (getline(PartyList, text)) {
        pair<string,float> candidate (
            text.substr(0, text.find(',')), 
            stoi(text.substr(text.find(',')+1, text.size())) / (float) total_votes
        );

        candidates.push_back(candidate);
    }

    PartyList.close();

    sort(candidates.begin(), candidates.end(), PartySorter);

    for (pair<string,float> p : candidates) {
        cout << p.first << "\n";
    }
}

int main(void) {
    total_votes = 26228;
    getList(4);
    return 1;
}